/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Pet as PrismaPet } from "@prisma/client";

export class PetServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PetCountArgs, "select">): Promise<number> {
    return this.prisma.pet.count(args);
  }

  async pets(args: Prisma.PetFindManyArgs): Promise<PrismaPet[]> {
    return this.prisma.pet.findMany(args);
  }
  async pet(args: Prisma.PetFindUniqueArgs): Promise<PrismaPet | null> {
    return this.prisma.pet.findUnique(args);
  }
  async createPet(args: Prisma.PetCreateArgs): Promise<PrismaPet> {
    return this.prisma.pet.create(args);
  }
  async updatePet(args: Prisma.PetUpdateArgs): Promise<PrismaPet> {
    return this.prisma.pet.update(args);
  }
  async deletePet(args: Prisma.PetDeleteArgs): Promise<PrismaPet> {
    return this.prisma.pet.delete(args);
  }
}
